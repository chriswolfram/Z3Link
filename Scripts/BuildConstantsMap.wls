#!/usr/bin/env wolframscript
(* ::Package:: *)

Needs["CCompilerDriver`"]

PacletDirectoryLoad["~/git/ForeignFunctionInterface"];
Needs["ChristopherWolfram`ForeignFunctionInterface`"]


constantNames = <|

	(* Declaration Kinds *)
	"DeclarationKinds" -> {
		"Z3_OP_TRUE",
		"Z3_OP_FALSE",
		"Z3_OP_EQ",
		"Z3_OP_DISTINCT",
		"Z3_OP_ITE",
		"Z3_OP_AND",
		"Z3_OP_OR",
		"Z3_OP_IFF",
		"Z3_OP_XOR",
		"Z3_OP_NOT",
		"Z3_OP_IMPLIES",
		"Z3_OP_OEQ",
		"Z3_OP_ANUM",
		"Z3_OP_AGNUM",
		"Z3_OP_LE",
		"Z3_OP_GE",
		"Z3_OP_LT",
		"Z3_OP_GT",
		"Z3_OP_ADD",
		"Z3_OP_SUB",
		"Z3_OP_UMINUS",
		"Z3_OP_MUL",
		"Z3_OP_DIV",
		"Z3_OP_IDIV",
		"Z3_OP_REM",
		"Z3_OP_MOD",
		"Z3_OP_TO_REAL",
		"Z3_OP_TO_INT",
		"Z3_OP_IS_INT",
		"Z3_OP_POWER",
		"Z3_OP_STORE",
		"Z3_OP_SELECT",
		"Z3_OP_CONST_ARRAY",
		"Z3_OP_ARRAY_MAP",
		"Z3_OP_ARRAY_DEFAULT",
		"Z3_OP_SET_UNION",
		"Z3_OP_SET_INTERSECT",
		"Z3_OP_SET_DIFFERENCE",
		"Z3_OP_SET_COMPLEMENT",
		"Z3_OP_SET_SUBSET",
		"Z3_OP_AS_ARRAY",
		"Z3_OP_ARRAY_EXT",
		"Z3_OP_SET_HAS_SIZE",
		"Z3_OP_SET_CARD",
		"Z3_OP_BNUM",
		"Z3_OP_BIT1",
		"Z3_OP_BIT0",
		"Z3_OP_BNEG",
		"Z3_OP_BADD",
		"Z3_OP_BSUB",
		"Z3_OP_BMUL",
		"Z3_OP_BSDIV",
		"Z3_OP_BUDIV",
		"Z3_OP_BSREM",
		"Z3_OP_BUREM",
		"Z3_OP_BSMOD",
		"Z3_OP_BSDIV0",
		"Z3_OP_BUDIV0",
		"Z3_OP_BSREM0",
		"Z3_OP_BUREM0",
		"Z3_OP_BSMOD0",
		"Z3_OP_ULEQ",
		"Z3_OP_SLEQ",
		"Z3_OP_UGEQ",
		"Z3_OP_SGEQ",
		"Z3_OP_ULT",
		"Z3_OP_SLT",
		"Z3_OP_UGT",
		"Z3_OP_SGT",
		"Z3_OP_BAND",
		"Z3_OP_BOR",
		"Z3_OP_BNOT",
		"Z3_OP_BXOR",
		"Z3_OP_BNAND",
		"Z3_OP_BNOR",
		"Z3_OP_BXNOR",
		"Z3_OP_CONCAT",
		"Z3_OP_SIGN_EXT",
		"Z3_OP_ZERO_EXT",
		"Z3_OP_EXTRACT",
		"Z3_OP_REPEAT",
		"Z3_OP_BREDOR",
		"Z3_OP_BREDAND",
		"Z3_OP_BCOMP",
		"Z3_OP_BSHL",
		"Z3_OP_BLSHR",
		"Z3_OP_BASHR",
		"Z3_OP_ROTATE_LEFT",
		"Z3_OP_ROTATE_RIGHT",
		"Z3_OP_EXT_ROTATE_LEFT",
		"Z3_OP_EXT_ROTATE_RIGHT",
		"Z3_OP_BIT2BOOL",
		"Z3_OP_INT2BV",
		"Z3_OP_BV2INT",
		"Z3_OP_CARRY",
		"Z3_OP_XOR3",
		"Z3_OP_BSMUL_NO_OVFL",
		"Z3_OP_BUMUL_NO_OVFL",
		"Z3_OP_BSMUL_NO_UDFL",
		"Z3_OP_BSDIV_I",
		"Z3_OP_BUDIV_I",
		"Z3_OP_BSREM_I",
		"Z3_OP_BUREM_I",
		"Z3_OP_BSMOD_I",
		"Z3_OP_PR_UNDEF",
		"Z3_OP_PR_TRUE",
		"Z3_OP_PR_ASSERTED",
		"Z3_OP_PR_GOAL",
		"Z3_OP_PR_MODUS_PONENS",
		"Z3_OP_PR_REFLEXIVITY",
		"Z3_OP_PR_SYMMETRY",
		"Z3_OP_PR_TRANSITIVITY",
		"Z3_OP_PR_TRANSITIVITY_STAR",
		"Z3_OP_PR_MONOTONICITY",
		"Z3_OP_PR_QUANT_INTRO",
		"Z3_OP_PR_BIND",
		"Z3_OP_PR_DISTRIBUTIVITY",
		"Z3_OP_PR_AND_ELIM",
		"Z3_OP_PR_NOT_OR_ELIM",
		"Z3_OP_PR_REWRITE",
		"Z3_OP_PR_REWRITE_STAR",
		"Z3_OP_PR_PULL_QUANT",
		"Z3_OP_PR_PUSH_QUANT",
		"Z3_OP_PR_ELIM_UNUSED_VARS",
		"Z3_OP_PR_DER",
		"Z3_OP_PR_QUANT_INST",
		"Z3_OP_PR_HYPOTHESIS",
		"Z3_OP_PR_LEMMA",
		"Z3_OP_PR_UNIT_RESOLUTION",
		"Z3_OP_PR_IFF_TRUE",
		"Z3_OP_PR_IFF_FALSE",
		"Z3_OP_PR_COMMUTATIVITY",
		"Z3_OP_PR_DEF_AXIOM",
		"Z3_OP_PR_ASSUMPTION_ADD",
		"Z3_OP_PR_LEMMA_ADD",
		"Z3_OP_PR_REDUNDANT_DEL",
		"Z3_OP_PR_CLAUSE_TRAIL",
		"Z3_OP_PR_DEF_INTRO",
		"Z3_OP_PR_APPLY_DEF",
		"Z3_OP_PR_IFF_OEQ",
		"Z3_OP_PR_NNF_POS",
		"Z3_OP_PR_NNF_NEG",
		"Z3_OP_PR_SKOLEMIZE",
		"Z3_OP_PR_MODUS_PONENS_OEQ",
		"Z3_OP_PR_TH_LEMMA",
		"Z3_OP_PR_HYPER_RESOLVE",
		"Z3_OP_RA_STORE",
		"Z3_OP_RA_EMPTY",
		"Z3_OP_RA_IS_EMPTY",
		"Z3_OP_RA_JOIN",
		"Z3_OP_RA_UNION",
		"Z3_OP_RA_WIDEN",
		"Z3_OP_RA_PROJECT",
		"Z3_OP_RA_FILTER",
		"Z3_OP_RA_NEGATION_FILTER",
		"Z3_OP_RA_RENAME",
		"Z3_OP_RA_COMPLEMENT",
		"Z3_OP_RA_SELECT",
		"Z3_OP_RA_CLONE",
		"Z3_OP_FD_CONSTANT",
		"Z3_OP_FD_LT",
		"Z3_OP_SEQ_UNIT",
		"Z3_OP_SEQ_EMPTY",
		"Z3_OP_SEQ_CONCAT",
		"Z3_OP_SEQ_PREFIX",
		"Z3_OP_SEQ_SUFFIX",
		"Z3_OP_SEQ_CONTAINS",
		"Z3_OP_SEQ_EXTRACT",
		"Z3_OP_SEQ_REPLACE",
		"Z3_OP_SEQ_REPLACE_RE",
		"Z3_OP_SEQ_REPLACE_RE_ALL",
		"Z3_OP_SEQ_REPLACE_ALL",
		"Z3_OP_SEQ_AT",
		"Z3_OP_SEQ_NTH",
		"Z3_OP_SEQ_LENGTH",
		"Z3_OP_SEQ_INDEX",
		"Z3_OP_SEQ_LAST_INDEX",
		"Z3_OP_SEQ_TO_RE",
		"Z3_OP_SEQ_IN_RE",
		"Z3_OP_STR_TO_INT",
		"Z3_OP_INT_TO_STR",
		"Z3_OP_UBV_TO_STR",
		"Z3_OP_SBV_TO_STR",
		"Z3_OP_STR_TO_CODE",
		"Z3_OP_STR_FROM_CODE",
		"Z3_OP_STRING_LT",
		"Z3_OP_STRING_LE",
		"Z3_OP_RE_PLUS",
		"Z3_OP_RE_STAR",
		"Z3_OP_RE_OPTION",
		"Z3_OP_RE_CONCAT",
		"Z3_OP_RE_UNION",
		"Z3_OP_RE_RANGE",
		"Z3_OP_RE_DIFF",
		"Z3_OP_RE_INTERSECT",
		"Z3_OP_RE_LOOP",
		"Z3_OP_RE_POWER",
		"Z3_OP_RE_COMPLEMENT",
		"Z3_OP_RE_EMPTY_SET",
		"Z3_OP_RE_FULL_SET",
		"Z3_OP_RE_FULL_CHAR_SET",
		"Z3_OP_RE_OF_PRED",
		"Z3_OP_RE_REVERSE",
		"Z3_OP_RE_DERIVATIVE",
		"Z3_OP_CHAR_CONST",
		"Z3_OP_CHAR_LE",
		"Z3_OP_CHAR_TO_INT",
		"Z3_OP_CHAR_TO_BV",
		"Z3_OP_CHAR_FROM_BV",
		"Z3_OP_CHAR_IS_DIGIT",
		"Z3_OP_LABEL",
		"Z3_OP_LABEL_LIT",
		"Z3_OP_DT_CONSTRUCTOR",
		"Z3_OP_DT_RECOGNISER",
		"Z3_OP_DT_IS",
		"Z3_OP_DT_ACCESSOR",
		"Z3_OP_DT_UPDATE_FIELD",
		"Z3_OP_PB_AT_MOST",
		"Z3_OP_PB_AT_LEAST",
		"Z3_OP_PB_LE",
		"Z3_OP_PB_GE",
		"Z3_OP_PB_EQ",
		"Z3_OP_SPECIAL_RELATION_LO",
		"Z3_OP_SPECIAL_RELATION_PO",
		"Z3_OP_SPECIAL_RELATION_PLO",
		"Z3_OP_SPECIAL_RELATION_TO",
		"Z3_OP_SPECIAL_RELATION_TC",
		"Z3_OP_SPECIAL_RELATION_TRC",
		"Z3_OP_FPA_RM_NEAREST_TIES_TO_EVEN",
		"Z3_OP_FPA_RM_NEAREST_TIES_TO_AWAY",
		"Z3_OP_FPA_RM_TOWARD_POSITIVE",
		"Z3_OP_FPA_RM_TOWARD_NEGATIVE",
		"Z3_OP_FPA_RM_TOWARD_ZERO",
		"Z3_OP_FPA_NUM",
		"Z3_OP_FPA_PLUS_INF",
		"Z3_OP_FPA_MINUS_INF",
		"Z3_OP_FPA_NAN",
		"Z3_OP_FPA_PLUS_ZERO",
		"Z3_OP_FPA_MINUS_ZERO",
		"Z3_OP_FPA_ADD",
		"Z3_OP_FPA_SUB",
		"Z3_OP_FPA_NEG",
		"Z3_OP_FPA_MUL",
		"Z3_OP_FPA_DIV",
		"Z3_OP_FPA_REM",
		"Z3_OP_FPA_ABS",
		"Z3_OP_FPA_MIN",
		"Z3_OP_FPA_MAX",
		"Z3_OP_FPA_FMA",
		"Z3_OP_FPA_SQRT",
		"Z3_OP_FPA_ROUND_TO_INTEGRAL",
		"Z3_OP_FPA_EQ",
		"Z3_OP_FPA_LT",
		"Z3_OP_FPA_GT",
		"Z3_OP_FPA_LE",
		"Z3_OP_FPA_GE",
		"Z3_OP_FPA_IS_NAN",
		"Z3_OP_FPA_IS_INF",
		"Z3_OP_FPA_IS_ZERO",
		"Z3_OP_FPA_IS_NORMAL",
		"Z3_OP_FPA_IS_SUBNORMAL",
		"Z3_OP_FPA_IS_NEGATIVE",
		"Z3_OP_FPA_IS_POSITIVE",
		"Z3_OP_FPA_FP",
		"Z3_OP_FPA_TO_FP",
		"Z3_OP_FPA_TO_FP_UNSIGNED",
		"Z3_OP_FPA_TO_UBV",
		"Z3_OP_FPA_TO_SBV",
		"Z3_OP_FPA_TO_REAL",
		"Z3_OP_FPA_TO_IEEE_BV",
		"Z3_OP_FPA_BVWRAP",
		"Z3_OP_FPA_BV2RM",
		"Z3_OP_INTERNAL",
		"Z3_OP_RECURSIVE",
		"Z3_OP_UNINTERPRETED"
	},

	(* AST Kinds *)
	"ASTKinds" -> {
		"Z3_NUMERAL_AST",
		"Z3_APP_AST",
		"Z3_VAR_AST",
		"Z3_QUANTIFIER_AST",
		"Z3_SORT_AST",
		"Z3_FUNC_DECL_AST",
		"Z3_UNKNOWN_AST"
	},

	(* Symbol Kinds *)
	"SymbolKinds" -> {
		"Z3_INT_SYMBOL",
		"Z3_STRING_SYMBOL"
	}

|>;


getConstantValues[declKindNames_] :=
	Enclose@Module[{lib, out},
		lib = Confirm@CreateLibrary[
			"#include <z3.h>\n\n" <>
			StringRiffle[StringTemplate["int get_`1`() {return `1`;}"]/@declKindNames,"\n\n"],
			CreateUUID[]
		];
		out = AssociationMap[ForeignFunctionLoad[lib,"get_"<>#,{}->"CInt"][]&,declKindNames];
		DeleteFile[lib];
		out
	]


constantValues = getConstantValues/@constantNames;


path = Export[
	FileNameJoin[{FileNameDrop[$InputFileName,-2], "Z3Link", "Assets", "ConstantsMap.wxf"}],
	constantValues
];

Echo["Built constants map at path: " <> path];
